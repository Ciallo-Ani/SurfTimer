name: Publish Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sm_version: [ "1.11.6795" ]


    steps:
      - uses: actions/checkout@v1

      - name: Set environment variables
        run: |
          SCRIPTING_PATH=$GITHUB_WORKSPACE/addons/sourcemod/scripting
          echo "SCRIPTING_PATH=$SCRIPTING_PATH" >> $GITHUB_ENV
          echo "INCLUDE_PATH=$SCRIPTING_PATH/include" >> $GITHUB_ENV

      - name: Setup SourcePawn Compiler ${{ matrix.SM_VERSION }}
        uses: rumblefrog/setup-sp@master
        with:
          version: ${{ matrix.SM_VERSION }}

      - name: Compile shavit plugin
        run: |
          echo -e "\nCompiling shavit plugin..."
          spcomp64 -O2 -i $INCLUDE_PATH shavit-core.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-chat.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-hud.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-misc.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-rankings.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-replay.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-sounds.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-stats.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-timelimit.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-wr.sp
          spcomp64 -O2 -i $INCLUDE_PATH shavit-zones.sp
          zip -r Plugins.zip ./*.smx
        working-directory: ${{ env.SCRIPTING_PATH }}/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Plugin
        id: upload-plugins
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Plugins.zip
          asset_name: Plugins.zip
          asset_content_type: application/octet-stream