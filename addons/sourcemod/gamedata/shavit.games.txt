"Games"
{
	// A guide to find most of these signatures and offsets: https://www.youtube.com/watch?v=ekyLf6hu4qI

	"#default"
	{
		"Keys"
		{
			"IGameMovement" "GameMovement001"
		}

		"Signatures"
		{
			"CreateInterface"
			{
				"windows"   "@CreateInterface"
				"linux"     "@CreateInterface"
			}
		}

		"Offsets"
		{
			"OS"
			{
				"windows"   "1"
				"linux"     "2"
			}

			"ProcessMovement"
			{
				"windows"   "1"
				"linux"     "2"
			}
		}
	}

	"csgo"
	{
		"Addresses"
		{
			"WalkMoveMaxSpeed"
			{
				"windows"
				{
					"signature" "CGameMovement::WalkMove"
				}
				"linux"
				{
					"signature" "CGameMovement::WalkMove"
				}
			}
		}
		"Offsets"
		{
			// search string "#SFUI_Notice_SprayPaint_TooClose" to find IsAbleToApplySpray and then go to the next function to find GetPlayerMaxSpeed. Then calculate the vtable offset.
			"CCSPlayer::GetPlayerMaxSpeed"
			{
				"windows"   "506"
				"linux"     "507"
				"mac"       "507"
			}
			// add 1 to the css offset and hope it works
			"CGameRules::IsSpawnPointValid"
			{
				"windows"   "77"
				"linux"     "78"
				"mac"       "78"
			}
			// can be found inside BotAddCommand
			"WEAPONTYPE_UNKNOWN"
			{
				"windows"   "19"
				"linux"     "19"
				"mac"       "19"
			}
			// search string: "Can't find specific footstep sound!" to find CBasePlayer::PlayStepSound.
			// then find the vtable from references and CBasePlayer::UpdateStepSound is right before PlayStepSound
			"CBasePlayer::UpdateStepSound"
			{
				"windows"   "409"
				"linux"     "410"
			}
			// Get the offset from the start of the signature to the start of our patch area.
			"CappingOffset"
			{
				"windows"	"31"
				"linux"		"28"
			}
			// patch CGameMovement::WalkMove VectorScale
			"PatchBytes"
			{
				"windows"	"42"
				"linux"		"15"
			}
		}

		"Signatures"
		{
			// search string: "silencer_detach" and then check the function calls above it
			"Player::DoAnimationEvent"
			{
				"windows"   "\x55\x8B\xEC\x56\x8B\xF1\x57\x80\xBE\x2A\x2A\x2A\x2A\x00\x74\x2A\x51"
				"linux"     "\x55\x89\xE5\x57\x56\x53\x83\xEC\x0C\x8B\x5D\x2A\x8B\x75\x2A\x8B\x7D\x2A\x80\xBB\x2A\x2A\x2A\x2A\x00\x75"
			}
			// search string: "-nobots". On Linux this leads to `AreBotsAllowed()`, which can check the references to find MaintainBotQuota
			"BotManager::MaintainBotQuota"
			{
				"windows"   "\x55\x8B\xEC\x83\xEC\x18\x89\x4D\x2A\xFF\x15"
				"linux"     "\x55\x89\xE5\x57\x56\x53\x83\xEC\x2C\xE8\x2A\x2A\x2A\x2A\x84\xC0\x74\x2A\xA1"
			}
			// search string: "Error - no profile for '%s' exists."
			"CCSBotManager::BotAddCommand"
			{
				"windows"   "\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x53\x56\x57\x80\x78\x2A\x00"
				"linux"     "\x55\x89\xE5\x57\x56\x53\x83\xEC\x1C\x8B\x45\x2A\x89\x45\x2A\xA1\x2A\x2A\x2A\x2A\x0F\xB6\x70"
			}
			// search string: "remove 0x%p: %s-%s" to find PhysicsRemoveToucher.
			// Find PhysicsCheckForEntityUntouch by checking the functions that call PhysicsRemoveToucher.
			"PhysicsCheckForEntityUntouch"
			{
				"windows"   "\x55\x8B\xEC\x83\xEC\x08\x56\x8B\xF1\x8B\x86\xD0\x00\x00\x00"
				"linux"     "\x55\x89\xE5\x57\x56\x53\x83\xEC\x24\x8B\x75\x2A\x6A\x01\x56"
			}
			// TODO
			"CGameMovement::WalkMove"
			{
				"windows"	"\xF3\x0F\x59\xC0\xF3\x0F\x59\xD2\xF3\x0F\x59\xC9\xF3\x0F\x58\xD0\xF3\x0F\x58\xD1\x0F\x28\xC2\xF3\x0F\x51\xC0\xF3\x0F\x5E\xD8"
				"linux"		"\xF3\x0F\x10\x9D\x2A\x2A\x2A\x2A\xF3\x0F\x51\xDB\xF3\x0F\x5E\xE3"
			}
			// search string: "maxplayers set to"
			"CGameServer::SetMaxClients"
			{
				"library"	"engine"
				"windows"   "\x55\x8B\xEC\x56\x8B\xF1\x8B\x4D\x2A\x8B\x96\x2A\x2A\x2A\x2A\x3B\xCA"
				"linux"     "\x55\x89\xE5\x53\x83\xEC\x04\x8B\x5D\x08\x8B\x55\x0C\x8B\x83\xBC\x03\x00\x00"
			}
			// search string: "Could not add bot to the game: Team is full"
			"CCSGameRules::TeamFull"
			{
				"windows"   "\x55\x8B\xEC\x56\x8B\xF1\xE8\x2A\x2A\x2A\x2A\x8B\x45\x2A\x83\xE8\x01"
				"linux"     "\x55\x89\xE5\x56\x53\x8B\x5D\x08\x8B\x75\x0C\x80\xBB\xAD\x0E\x00\x00\x00"
			}
		}
	}
}
